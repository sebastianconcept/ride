"
I'm the default Home controller for the default new Ride web application.
"
Class {
	#name : #WelcomeController,
	#superclass : #RideSessionBasedController,
	#category : #'Ride-Controllers'
}

{ #category : #private }
WelcomeController class >> defaultModel [

	^ Welcome new
]

{ #category : #initialization }
WelcomeController >> createSubControllers [

	super createSubControllers.
	self subcontrollers at: #intro put: IntroController new.
	self subcontrollers at: #counter put: CounterController new.
	
]

{ #category : #'rest-html' }
WelcomeController >> htmlPageOnGET [

	"Answers the HTML content generated by this controller, 
	enclosed within the application layout template."

	| templateModel |
	templateModel := JsonObject new.
	model userFirstName ifNotNil: [ 
		templateModel
			hasFirstName: true;
			userFirstName: model userFirstName ].
	^ Ride service locate templates layouts application
		  value: templateModel
		  partials: { (#main -> (views at: #index)) } asDictionary
]

{ #category : #accessing }
WelcomeController >> model: aModel [

	super model: aModel.
	model := aModel.
	self subcontrollers intro model: aModel.
	self subcontrollers counter model: Counter new
]

{ #category : #'as yet unclassified' }
WelcomeController >> onUserFirstNameChanged [

	(self childAt: #counter) model userFirstName:
		self model userFirstName
]

{ #category : #initialization }
WelcomeController >> setObservers [

	super setObservers.

	model when: #userFirstNameChanged send: #onUserFirstNameChanged to: self
]
